@model List<Beerka.Persistence.Product>
@using Beerka.Persistence;

@{
    ViewData["Title"] = "Product List";
}

@if (@Model.Count() <= 0)
{
    <div class="text-center">
        Unfortunately there aren't any products available in this subcategory at the moment.
        You can click <a asp-controller="Home">here</a> to return to the home page.
    </div>
}
else
{
    var subCategory = Model.FirstOrDefault().SubCategory;
    var mainCategory = subCategory.MainCategory;
    <h1>@mainCategory.Name / @subCategory.Name </h1>

    @if ((int)ViewData["PageCount"] > 1)
    {
        <table  class="table" border="0" width="100%" >
            <tbody>
                <tr>
                    <td width="10%" style="text-align:center">
                        @if (!((int)ViewData["PageNumber"] == 0))
                        {
                            <b>
                                @Html.ActionLink("<<<", "Index", "Products", new
                                    {
                                        id = subCategory.ID,
                                        sortOrderPrice = ViewData["SortOrderPrice"],
                                        sortOrderManufacturer = ViewData["SortOrderManufacturer"],
                                        page = (int)ViewData["PageNumber"] - 1
                                    })
                            </b>
                        }
                    </td>
                    <td style="text-align:center">
                        @{ Write((int)ViewData["PageNumber"] + 1); } / @ViewData["PageCount"]
                    </td>
                    <td width="10%" style="text-align:center">
                        @if ((int)ViewData["PageNumber"] + 1 < (int)ViewData["PageCount"])
                        {
                            <b>
                                @Html.ActionLink(">>>", "Index", "Products", new
                                    {
                                        id = subCategory.ID,
                                        sortOrderPrice = ViewData["SortOrderPrice"],
                                        sortOrderManufacturer = ViewData["SortOrderManufacturer"],
                                        page = (int)ViewData["PageNumber"] + 1
                                    })
                            </b>
                        }
                    </td>
                </tr>
            </tbody>
        </table>
    }

    <table class="table">
        <thead>
            <tr>
                <th>
                    <b>Name</b>
                </th>
                <th>
                    <b>
                        @Html.ActionLink("Manufacturer", "Index", "Products", new
                            {
                                id = subCategory.ID,
                                sortOrderPrice = ViewData["SortOrderPrice"],
                                sortOrderManufacturer = ViewData["SortOrderManufacturer"],
                                changeSortOrderManufacturer = true
                            })
                    </b>
                </th>
                <th>
                    <b>Model Number</b>
                </th>
                <th>
                    <b>Description</b>
                </th>
                <th>
                    <b>
                        @Html.ActionLink("Price (Net)", "Index", "Products", new
                            {
                                id = subCategory.ID,
                                sortOrderPrice = ViewData["SortOrderPrice"],
                                sortOrderManufacturer = ViewData["SortOrderManufacturer"],
                                changeSortOrderPrice = true
                            })
                    </b>
                </th>
                <th>
                    <b>
                        @Html.ActionLink("Price (Gross)", "Index", "Products", new
                            {
                                id = subCategory.ID,
                                sortOrderPrice = ViewData["SortOrderPrice"],
                                sortOrderManufacturer = ViewData["SortOrderManufacturer"],
                                changeSortOrderPrice = true
                            })
                    </b>
                </th>
                <th>
                    <b>Stock Remaining</b>
                </th>
                <th>
                    <b>Available Packagings</b>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td style="max-width:20%">
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td style="max-width:10%">
                        @Html.DisplayFor(modelItem => item.Manufacturer)
                    </td>
                    <td style="max-width:10%">
                        @Html.DisplayFor(modelItem => item.ModelNumber)
                    </td>
                    <td style="max-width:20%">
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PriceNet) Ft
                    </td>
                    <td>
                        @{
                            Write(Math.Round(item.PriceNet * 1.27, 0).ToString() + " Ft");
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Stock) units
                    </td>
                    <td>
                        @{
                            string packagingStr = Product.Packaging.Unit.DisplayName;
                            var pt = item.PackagingType;
                            if (pt.DbValue!=Product.Packaging.Unit.DbValue)
                            {
                                packagingStr += ", " + pt.DisplayName;
                            }
                            Write(packagingStr);
                        }
                    </td>
                    <td>
                        @Html.ActionLink("Buy","AddItem","ShoppingCart",new { id=item.ID })
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @if ((int)ViewData["PageCount"] > 1)
    {
        <table class="table" border="0">
            <tbody>
                <tr>
                    <td width="10%" style="text-align:center">
                        @if (!((int)ViewData["PageNumber"] == 0))
                        {
                            <b>
                                @Html.ActionLink("<<<", "Index", "Products", new
                                    {
                                        id = subCategory.ID,
                                        sortOrderPrice = ViewData["SortOrderPrice"],
                                        sortOrderManufacturer = ViewData["SortOrderManufacturer"],
                                        page = (int)ViewData["PageNumber"] - 1
                                    })
                            </b>
                        }
                    </td>
                    <td style="text-align:center">
                        @{ Write((int)ViewData["PageNumber"] + 1); } / @ViewData["PageCount"]
                    </td>
                    <td width="10%" style="text-align:center">
                        @if ((int)ViewData["PageNumber"] + 1 < (int)ViewData["PageCount"])
                        {
                            <b>
                                @Html.ActionLink(">>>", "Index", "Products", new
                                    {
                                        id = subCategory.ID,
                                        sortOrderPrice = ViewData["SortOrderPrice"],
                                        sortOrderManufacturer = ViewData["SortOrderManufacturer"],
                                        page = (int)ViewData["PageNumber"] + 1
                                    })
                            </b>
                        }
                    </td>
                </tr>
            </tbody>
        </table>
    }

}
